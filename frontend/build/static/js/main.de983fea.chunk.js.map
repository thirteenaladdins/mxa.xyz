{"version":3,"sources":["components/SideNav.jsx","pages/NavOverlay.jsx","components/hamburger.jsx","components/Navbar.jsx","pages/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["SideNav","className","href","NavOverlay","Hamburger","useState","isActive","setActive","onClick","Navbar","Home","show","document","getElementById","App","components","ShowNav","ShowHome","displayedComponent","setComponent","showComponent","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"6TAeeA,MAZf,WACE,OACE,sBAAKC,UAAU,WAAf,UACE,mBAAGC,KAAK,IAAR,qBACA,mBAAGA,KAAK,IAAR,mBACA,mBAAGA,KAAK,MACR,mBAAGA,KAAK,MACR,mBAAGA,KAAK,UCCCC,MARf,WACE,OACE,qBAAKF,UAAU,cAAf,SACE,cAAC,EAAD,O,MCgBSG,MAnBf,WAAsB,IAAD,EACWC,mBAAS,SADpB,mBACZC,EADY,KACFC,EADE,KAKnB,OACE,qBAAKN,UAAW,UAAhB,SACE,sBACEO,QANe,WACnBD,GAAWD,IAMPL,UAAWK,EAAW,kBAAoB,uBAF5C,UAIE,yBACA,yBACA,+BCYOG,MAhBf,YAKE,OALmB,eAMjB,sBAAKR,UAAU,SAAf,UAGE,sBAAMA,UAAU,YAAhB,kBACA,cAAC,EAAD,QCCSS,MAXf,YACE,OADsB,EAARC,KAEZ,qBAAKV,UAAU,iBAAf,SACE,wBAAQA,UAAU,iBCRNW,SAASC,eAAe,cAoC3BC,MAxBf,WACE,IAAMC,EAAa,CACjBC,QAAS,cAAC,EAAD,IACTC,SAAU,cAAC,EAAD,KAHC,EAO8BZ,mBAAS,YAPvC,mBAONa,EAPM,KAOcC,EAPd,KASPC,EAAgB,SAACC,GACrBF,EAAaE,IAGf,OACE,sBAAKpB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,wBAAQO,QAAS,kBAAMY,EAAc,aAArC,sBACA,wBAAQZ,QAAS,kBAAMY,EAAc,YAArC,qBAEA,qBAAKnB,UAAW,OAAhB,SAAyBc,EAAWG,SC1B3BI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrB,SAASC,eAAe,SAM1BS,M","file":"static/js/main.de983fea.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./sidenav.css\";\r\n\r\nfunction SideNav() {\r\n  return (\r\n    <div className=\"side-nav\">\r\n      <a href=\"#\">Artwork</a>\r\n      <a href=\"#\">About</a>\r\n      <a href=\"#\"></a>\r\n      <a href=\"#\"></a>\r\n      <a href=\"#\"></a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SideNav;\r\n","import React from \"react\";\r\nimport SideNav from \"../components/SideNav.jsx\";\r\n\r\nfunction NavOverlay() {\r\n  return (\r\n    <div className=\"nav-overlay\">\r\n      <SideNav></SideNav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavOverlay;\r\n","import React, { useState } from \"react\";\r\nimport \"./hamburger.css\";\r\n\r\nfunction Hamburger() {\r\n  const [isActive, setActive] = useState(\"false\");\r\n  const handleToggle = () => {\r\n    setActive(!isActive);\r\n  };\r\n  return (\r\n    <div className={\"wrapper\"}>\r\n      <div\r\n        onClick={handleToggle}\r\n        className={isActive ? \"icon nav-icon-5\" : \"icon nav-icon-5 open\"}\r\n      >\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Hamburger;\r\n","import React from \"react\";\r\nimport \"./navbar.css\";\r\n\r\nimport NavOverlay from \"../pages/NavOverlay\";\r\nimport Hamburger from \"./hamburger.jsx\";\r\n\r\n// when the button is clicked - show overlay\r\n// maybe instead in this instance we'll have a container,\r\n// that will be where the page scrolls,\r\n// on click of the navigation button we change the contents,\r\n// so the visible component is either the black bar or the scroll page...\r\n\r\nfunction Navbar({}) {\r\n  // const onButtonClick = (mode) => {\r\n  //   setShow(mode);\r\n  // };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      {/* <HomeLogo></HomeLogo> */}\r\n      {/* passing true or false here? */}\r\n      <span className=\"home-icon\">Home</span>\r\n      <Hamburger />\r\n      {/* <NavOverlay></NavOverlay> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./home.css\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport NavOverlay from \"../pages/NavOverlay\";\r\nimport Hamburger from \"../components/hamburger.jsx\";\r\nimport SideNav from \"../components/SideNav\";\r\n\r\n// click - visible overlay\r\n// within the home component I want to trigger whether or not\r\n// the nav is displayed or the home feed is displayed.\r\n// so true = nav, false = home\r\n\r\nfunction Home({ show }) {\r\n  return (\r\n    <div className=\"home-container\">\r\n      <header className=\"home-body\"></header>\r\n\r\n      {/* {console.log(show)} */}\r\n      {/* <SideNav></SideNav> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import \"./App.css\";\nimport Home from \"./pages/Home.jsx\";\nimport ReactDOM from \"react-dom\";\nimport React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport NavOverlay from \"./pages/NavOverlay\";\n\nconst modalRoot = document.getElementById(\"modal-root\");\n\nconst Modal = (props) => {\n  return ReactDOM.createPortal(\n    <div className=\"overlay\">{props.children}</div>,\n    modalRoot\n  );\n};\n\n// hide current home div\n// set nav overlay instead. Retain navigation bar.\n\nfunction App() {\n  const components = {\n    ShowNav: <NavOverlay />,\n    ShowHome: <Home />,\n  };\n\n  // default state is home\n  const [displayedComponent, setComponent] = useState(\"ShowHome\");\n\n  const showComponent = (component) => {\n    setComponent(component);\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar></Navbar>\n      <button onClick={() => showComponent(\"ShowHome\")}>ShowHome</button>\n      <button onClick={() => showComponent(\"ShowNav\")}>ShowNav</button>\n\n      <div className={\"home\"}>{components[displayedComponent]}</div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}